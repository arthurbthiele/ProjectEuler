#this time we're finding the quadratic which produces the greatest number of primes for any integer input

from arthurtools import primes

primes = primes(2000000)

maxlength = 0
maxa = 0
maxb = 0

for a in range (0, 168):
    for b in range (0, 168):
        length = 0
        n = 0
        primea = -primes[a]
        primeb = primes[b]
        while (n ** 2 + primea * n + primeb) in primes:
            n += 1
            length += 1
        if length > maxlength:
            maxprimes = n
            maxlength = length
            maxa = primea
            maxb = primeb
            print primea, primeb

print "The best prime generating quadratic is : n ** 2 + ", a, " * n + ", b
print "This generates ", maxlength, " primes"

#this generated the correct solution of -61, 971 before getting stuck in an infinite while loop
#this is probably becuase the primes generated by the quadratic were too large to be generated by my prime sieve!
#that's pretty impressive!
